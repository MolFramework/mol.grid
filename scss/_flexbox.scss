// flex
.flex,
.flex-row,
.flex-col {
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;
  &.nowrap {
    flex-wrap: nowrap;
  }
  &.wrap-reverse {
    flex-wrap: wrap-reverse;
  }
  &.y-start {
    align-items: flex-start;
  }
  &.y-end {
    align-items: flex-end;
  }
  &.y-center {
    align-items: center;
  }
  &.y-baseline {
    align-items: baseline;
  }
  &.y-stretch {
    align-items: stretch;
  }
  &.x-start {
    justify-content: flex-start;
  }
  &.x-end {
    justify-content: flex-end;
  }
  &.x-center {
    justify-content: center;
  }
  &.x-around {
    justify-content: space-around;
  }
  &.x-between {
    justify-content: space-between;
  }
  &.x-evenly {
    justify-content: space-evenly;
  }
  @for $g from 1 through $m-grid {
    > .order-#{$g} {
      order: #{$g};
    }
  }
}

.flex,
.flex-row {
  flex-direction: row;
  &.reverse {
    flex-direction: row-reverse;
  }
}

.flex-row {
  margin-left: - ($m-spacebase * .5);
  margin-right: - ($m-spacebase * .5);
  > .m {
    margin-left: $m-spacebase * .5;
    margin-right: $m-spacebase * .5;
  }
  > .col-0 {
    flex: 0 0;
    margin-left: $m-spacebase * .5;
    margin-right: $m-spacebase * .5;
  }
  > .col-1 {
    flex: 1 0;
    margin-left: $m-spacebase * .5;
    margin-right: $m-spacebase * .5;
  }
  @for $i from 1 through $m-grid {
    @for $j from 1 through $i {
      > .col-#{$j}_#{$i} {
        flex: 0 0 calc(100% * #{$j}/#{$i} - #{$m-spacebase});
        margin-left: $m-spacebase * .5;
        margin-right: $m-spacebase * .5;
        max-width: calc(100% * #{$j}/#{$i} - #{$m-spacebase});
      }
    }
  }
}

.flex {
  > .col-0 {
    flex: 0 0;
  }
  > .col-1 {
    flex: 1 0;
  }
  @for $i from 1 through $m-grid {
    @for $j from 1 through $i {
      > .col-#{$j}_#{$i} {
        flex: 0 0 calc(100% * #{$j}/#{$i});
        max-width: calc(100% * #{$j}/#{$i});
      }
    }
  }
}

@each $name, $query in $m-queries {
  @media screen and (min-width: $query) {
    .flex-row {
      @for $i from 1 through $m-grid {
        @for $j from 1 through $i {
          > .col-#{$name}-#{$j}_#{$i}  {
            flex: 0 0 calc(100% * #{$j}/#{$i} - #{$m-spacebase});
            margin-left: $m-spacebase * .5;
            margin-right: $m-spacebase * .5;
            max-width: calc(100% * #{$j}/#{$i} - #{$m-spacebase});
          }
        }
      }
    }
    .flex {
      @for $i from 1 through $m-grid {
        @for $j from 1 through $i {
          > .col-#{$name}-#{$j}_#{$i}  {
            flex: 0 0 calc(100% * #{$j}/#{$i});
            max-width: calc(100% * #{$j}/#{$i});
          }
        }
      }
    }
  }
}

.flex-col {
  flex-direction: column;
  &.reverse {
    flex-direction: column-reverse;
  }
  > .row-0 {
    flex: 0 0;
  }
  > .row-1 {
    flex: 1 0;
  }
  @for $i from 1 through $m-grid {
    @for $j from 1 through $i {
      > .row-#{$j}_#{$i} {
        height: calc(100vh * #{$j}/#{$i});
      }
    }
  }
}

.self-start {
  align-self: flex-start;
}
.self-end {
  align-self: flex-end;
}
.self-baseline {
  align-self: baseline;
}
.self-center {
  align-self: center;
}
.self-stretch {
  align-self: stretch;
}
